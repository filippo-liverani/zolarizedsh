function md() { mkdir -p '$@' && cd '$@'
}

function search() {
    find . -name '$1'
}

replace() {
    find . -name '$1' -type f -exec sed -i 's/$2/$3/g' {} \;
}

open-tunnel() {
    ssh -g -R 2222:localhost:22 $1
}

enter-tunnel() {
    ssh -t $1 'ssh -p 2222 $2@localhost'
}

monitor() {
    main_output=LVDS1
    outputs=(HDMI1 VGA1 DP1)

    if [[ $1 == "left" || $1 == "right" ]] ; then
      position=$1-of
    elif [[ $1 = "same" ]] ; then
      position=$1-as
    else
      position=$1
    fi

    xrandr --output $main_output --auto --primary

    for output in $outputs; do
      if [[ $position != "off" ]] && (xrandr | grep "$output connected") ; then
        xrandr --output $output --auto --$position $main_output
      else
        xrandr --output $output --off
      fi
    done
}

tmux-new() {
    tmux new-session -d -n vim vim
    tmux new-window -n shell
    tmux new-window -n git
    tmux -2 attach-session -d
}

docker-up() {
    boot2docker init
    boot2docker start
    eval $(boot2docker shellinit)
}

cask-upgrade() {
    sudo rm -r `brew --cache`
    for app in $(brew cask list); do
      echo "Upgrading $app"
      brew cask uninstall $app
      brew cask install --force --appdir="/Applications" $app
    done
    brew cask cleanup
}
